name: Git Version

on:
  workflow_call:
    inputs:
      version:
        description: 'The version of GitVersion to use'
        required: false
        type: string
        default: '0.2.9'
      project_path:
        description: 'The path to the project to build. Used for Git Version.'
        required: false
        type: string
        default: '.'
      submodules:
        description: 'Whether to checkout submodules: `true` to checkout submodules or `recursive` to recursively checkout submodules.'
        required: false
        type: string
        default: 'false'
    outputs:
      build_number:
        value: ${{ jobs.get-version.outputs.build_number }}

permissions:
  contents: read

jobs:
  get-version:
    name: Get Version
    runs-on: ubuntu-latest
    outputs:
      build_number: ${{ steps.git-version.outputs.GIT_VERSION }}
    steps:
      - name: Checkout Repository
        id: checkout
        uses: actions/checkout@v4
        with:
          submodules: ${{ inputs.submodules }}
          fetch-depth: 1000
          fetch-tags: true

      - name: Work around actions/checkout#2041
        id: checkout-tags
        # language=bash
        run: git fetch --tags

      - name: Setup Java 17
        id: setup-java
        # https://github.com/actions/runner-images/blob/main/images/linux/Ubuntu2204-Readme.md#java
        # We use this instead of the recommended `actions/setup-java` action because this is faster
        # language=bash
        run: echo "JAVA_HOME=$(echo $JAVA_HOME_17_X64)" >> "$GITHUB_ENV"

      - name: Get Version using GitVersion
        id: git-version
        # language=bash
        run: |-
          wget 'https://maven.minecraftforge.net/net/minecraftforge/git-version/${{ inputs.version }}/git-version-${{ inputs.version }}-fatjar.jar' -o ${{ runner.temp }}/git-version.jar
          GIT_VERSION=$(java -jar ${{ runner.temp }}/git-version.jar --project-dir ${{ inputs.project_path }})
          if [[ $? -eq 0 ]] && [[ -z $GIT_VERSION ]]; then
            echo "Failed to get version number! Refusing to build."
            exit 1
          fi
          
          echo "GIT_VERSION=$GIT_VERSION" >> $GITHUB_ENV
