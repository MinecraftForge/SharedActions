name: Promote artifacts

on:
  workflow_call:
    inputs:
      group:
        description: |
          The maven group for the artifact to promote. You can promote multiple artifacts by specifying multiple groups and artifacts (separated by ',').
          If there is only one group defined, it will be used for all artifacts. They are used in the same order as the artifacts.
          Subprojects with unique version numbers should be promoted separately with their own build action.
        required: true
        type: string
      artifact:
        description: |
          The maven artifact name to promote. You can promote multiple artifacts by specifying multiple groups and artifacts (separated by ',').
          Subprojects with unique version numbers should be promoted separately with their own build action.
        required: true
        type: string
      version:
        description: |
          The version of the maven artifact to promote.
        required: true
        type: string
      type:
        description: |
          The promotion type for the maven artifact. This reflects how it is viewed in the Files site.
        required: false
        type: string
        default: 'latest'
    secrets:
      PROMOTE_ARTIFACT_WEBHOOK:
        required: true
      PROMOTE_ARTIFACT_USERNAME:
        required: true
      PROMOTE_ARTIFACT_PASSWORD:
        required: true

  workflow_dispatch:
    inputs:
      group:
        description: |
          The maven group for the artifact to promote. You can promote multiple artifacts by specifying multiple groups and artifacts (separated by ',').
          If there is only one group defined, it will be used for all artifacts. They are used in the same order as the artifacts.
          Subprojects with unique version numbers should be promoted separately with their own build action.
        required: true
        type: string
      artifact:
        description: |
          The maven artifact name to promote. You can promote multiple artifacts by specifying multiple groups and artifacts (separated by ',').
          Subprojects with unique version numbers should be promoted separately with their own build action.
        required: true
        type: string
      version:
        description: |
          The version of the maven artifact to promote.
        required: true
        type: string
      type:
        description: |
          The promotion type for the maven artifact. This reflects how it is viewed in the Files site.
        required: false
        type: choice
        default: 'latest'
        options:
          - 'latest'
          - 'recommended'

jobs:
  promote-artifacts:
    name: Promote artifact${{ contains( inputs.artifact, ',' ) == 'true' && 's' || '' }}
    runs-on: ubuntu-latest
    steps:
      - name: Promote artifact${{ contains( inputs.artifact, ',' ) == 'true' && 's' || '' }}
        id: promote-artifacts
        uses: actions/github-script@v7
        env:
          group: ${{ inputs.group }}
          artifact: ${{ inputs.artifact }}
          version: ${{ inputs.version }}
          type: ${{ inputs.type }}
          PROMOTE_ARTIFACT_WEBHOOK: ${{ secrets.PROMOTE_ARTIFACT_WEBHOOK }}
          PROMOTE_ARTIFACT_USERNAME: ${{ secrets.PROMOTE_ARTIFACT_USERNAME }}
          PROMOTE_ARTIFACT_PASSWORD: ${{ secrets.PROMOTE_ARTIFACT_PASSWORD }}
        with:
          result-encoding: string
          # language=js
          script: |
            'use strict';
            const { version, type, group, artifact, PROMOTE_ARTIFACT_WEBHOOK, PROMOTE_ARTIFACT_USERNAME, PROMOTE_ARTIFACT_PASSWORD } = process.env
            const groups = group.split(',')
            const artifacts = artifact.split(',')
            
            /** @type string[] */
            const jsons = []
            for (let i = 0; i < artifacts.length; i++) {
              jsons.push(JSON.stringify({
                group: `${groups[i] ?? groups[0]}`,
                artifact: `${artifacts[i]}`,
                version: `${version}`,
                type: `${type}`
              }))
            }
            
            let success = true
            for (const json of jsons) {
                if (await exec.exec('curl', [
                    '--tlsv1.3', '--compressed', '-sS', '-m', '10',
                    '-u', `${PROMOTE_ARTIFACT_USERNAME}:${PROMOTE_ARTIFACT_PASSWORD}`,
                    '-H', 'Content-Type: application/json',
                    '--request', 'POST',
                    '-d', `${json}`,
                    `${PROMOTE_ARTIFACT_WEBHOOK}`
                ]) !== 0) {
                    core.error(`Failed to promote artifact: ${json}`, {title: 'Failed to promote artifact'})
                    success = false
                }
            }
            
            if (!success) {
                core.setFailed('Failed to promote one or more artifacts.');
            }
