name: Gradle CI

on:
  workflow_call:
    inputs:
      # Git
      submodules:
        description: |
          Whether to checkout submodules: 'true' to checkout submodules or 'recursive' to recursively checkout submodules.
        required: false
        type: string
        default: 'false'

      # Git Version
      project_path:
        description: |
          The path to the project to build. Leave this unset for the root project.
          Used for Git Version to get the project version number, and displayed alongside the repo name in Discord notifications.
        required: false
        type: string
        default: '.'

      # Java
      java:
        description: |
          The version of Java to use to run Gradle. Note that this Java version is used to run Gradle itself, which is not used to compile the project.
          If the GitHub Actions runner contains this version, it will be used without any additional setup (i.e. an LTS version with only the major number).
          See https://github.com/actions/runner-images/blob/main/images/ubuntu/Ubuntu2404-Readme.md
        required: false
        type: string
        default: '21'
      java_distro:
        description: |
          The Java distribution to use. Setting this will cause the runner-local Java to not be used.
          See https://github.com/actions/setup-java?tab=readme-ov-file#supported-distributions
        required: false
        type: string
        default: ''

      # Gradle
      gradle_setup:
        description: |
          Commands to run before executing the gradle command.
        required: false
        type: string
      gradle_tasks:
        description: |
          The Gradle tasks to run.
        required: false
        type: string
        default: 'check publish'

      # Artifact Promotion
      artifact_group:
        description: |
          The maven group for the artifact to promote. You can promote multiple artifacts by specifying multiple groups and artifacts (separated by ',').
          If there is only one group defined, it will be used for all artifacts. They are used in the same order as the artifacts.
        required: false
        type: string
        default: 'net.minecraftforge'
      artifact_name:
        description: |
          The maven artifact name to promote. You can promote multiple artifacts by specifying multiple groups and artifacts (separated by ',').
        required: false
        type: string
        default: ''
      promotion_type:
        description: 'Promotion type'
        required: false
        type: string
        default: 'latest'

      # Discord
      author_icon_url:
        description: |
          The URL to the author's icon to use in the Discord notification.
        required: false
        type: string
        default: 'https://avatars.githubusercontent.com/u/1390178'

    secrets:
      # Discord Build Notification
      DISCORD_WEBHOOK:
        description: |
          The Discord webhook URL to send the build notification to.
        required: false

      # Gradle
      GRADLE_CACHE_KEY:
        description: |
          The encryption key to use for Gradle caches.
          See https://github.com/gradle/actions/blob/main/docs/setup-gradle.md#saving-configuration-cache-data
        required: false

      # Publishing (Normal)
      MAVEN_USER:
        description: |
          The username to use for publishing Maven artifacts.
          If Gradle project is using GradleUtils and this action doesn't have this set, the build will fail on publish.
        required: false
      MAVEN_PASSWORD:
        description: |
          The password to use for publishing Maven artifacts.
          If Gradle project is using GradleUtils and this action doesn't have this set, the build will fail on publish.
        required: false

      # Publishing (Gradle Plugins)
      GRADLE_PUBLISH_KEY:
        description: |
          The API key to use for publishing Gradle plugins. If this is set, the API secret must also be set.
          If this action doesn't have this set, the build will fail on publishPlugins.
        required: false
      GRADLE_PUBLISH_SECRET:
        description: |
          The API secret to use for publishing Gradle plugins. If this is set, the API key must also be set.
          If this action doesn't have this set, the build will fail on publishPlugins.
        required: false

      # Signing
      SIGN_KEY_ALIAS:
        description: |
          The key alias (username) to use for jar signing.
          Setting this is highly recommended.
        required: false
      SIGN_KEY_PASSWORD:
        description: |
          The key password to use for jar signing.
          Setting this is highly recommended.
        required: false
      SIGN_KEYSTORE_PASSWORD:
        description: |
          The keystore password for the key to use for jar signing.
          Setting this is highly recommended.
        required: false
      SIGN_KEYSTORE_DATA:
        description: |
          The keystore in base64 for the key to use for jar signing.
          Setting this is highly recommended.
        required: false

      # Artifact Promotion
      PROMOTE_ARTIFACT_WEBHOOK:
        description: |
          DEPRECATED! WILL BE REMOVED IN v1 ONCE GRADLEUTILS HANDLES ARTIFACT PROMOTION!
          The webhook to use for promoting artifacts on the Forge Files site.
        required: false
      PROMOTE_ARTIFACT_USERNAME:
        description: |
          DEPRECATED! WILL BE REMOVED IN v1 ONCE GRADLEUTILS HANDLES ARTIFACT PROMOTION!
          The username to use for promoting artifacts on the Forge Files site.
        required: false
      PROMOTE_ARTIFACT_PASSWORD:
        description: |
          DEPRECATED! WILL BE REMOVED IN v1 ONCE GRADLEUTILS HANDLES ARTIFACT PROMOTION!
          The password to use for promoting artifacts on the Forge Files site.
        required: false

permissions:
  contents: read

jobs:
  git-version:
    name: Run Git Version
    uses: MinecraftForge/SharedActions/.github/workflows/git-version.yml@v0
    with:
      project_path: ${{ inputs.project_path }}
      submodules: ${{ inputs.submodules }}

  notify-discord-start:
    name: Notify Discord (start)
    needs: [ 'git-version' ]
    uses: MinecraftForge/SharedActions/.github/workflows/discord-build-notifier.yml@v0
    with:
      project_path: ${{ inputs.project_path }}
      build_status: started
      build_number: ${{ needs.git-version.outputs.build_number }}
      author_icon_url: ${{ inputs.author_icon_url }}
    secrets:
      DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}

  gradle:
    name: Run Gradle
    needs: [ 'git-version' ]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        id: checkout
        uses: actions/checkout@v4
        with:
          submodules: ${{ inputs.submodules }}
          fetch-depth: 1000
          fetch-tags: true

      - name: Checkout Repository (extra)
        id: checkout-tags
        shell: bash
        # language=bash
        run: |-
          if [[ -z $(git tag --list) ]]; then
            git fetch --tags
          else
            echo "::warning title=actions/checkout#2041 fixed::The bug that caused actions/checkout to not fetch tags has been fixed. This step can be safely deleted."
          fi

      - name: Setup Java ${{ inputs.java }} (simple)
        id: setup-java-simple
        if: ${{ inputs.java_distro == '' }}
        continue-on-error: true
        # https://github.com/actions/runner-images/blob/main/images/ubuntu/Ubuntu2404-Readme.md
        # language=bash
        run: |-
          FOUND_JAVA=$(echo $JAVA_HOME_${{ inputs.java }}_X64)
          if [[ -n $FOUND_JAVA ]]; then
            echo "JAVA_HOME=$FOUND_JAVA" >> "$GITHUB_ENV"
          else
            exit 1
          fi

      - name: Setup Java ${{ inputs.java }} (advanced)
        id: setup-java-advanced
        uses: actions/setup-java@v4
        if: ${{ steps.setup-java-simple.outcome != 'success' }}
        with:
          distribution: ${{ inputs.java_distro != '' && inputs.java_distro || 'temurin' }}
          java-version: ${{ inputs.java }}

      - name: Confirm Java Version
        id: setup-java-confirm
        # language=bash
        run: |-
          echo "::notice title=Java Version Info::$(java -Xinternalversion)"

      - name: Setup Gradle
        id: setup-gradle
        uses: gradle/actions/setup-gradle@v4
        with:
          cache-encryption-key: ${{ secrets.GRADLE_CACHE_KEY }}

      - name: Setup Gradle (extra)
        id: setup-gradle-executable
        shell: bash
        # language=bash
        run: |-
          if [[ ! -x ./gradlew ]]; then
            chmod +x ./gradlew
            echo "::notice title=Gradle Wrapper script not executable::The 'gradlew' wrapper script is not executable for linux machines on your repository. Consider setting it manually to make future builds go faster."
          fi

      - name: Set Maven Info
        env:
          MAVEN_USER: ${{ secrets.MAVEN_USER }}
          MAVEN_PASSWORD: ${{ secrets.MAVEN_PASSWORD }}
        if: ${{ env.MAVEN_USER != '' }}
        # language=bash
        run: |-
          echo "MAVEN_USER=$MAVEN_USER" >> "$GITHUB_ENV"
          echo "MAVEN_PASSWORD=$MAVEN_PASSWORD" >> "$GITHUB_ENV"

      - name: Set Signing Info
        env:
          SIGN_KEY_ALIAS: ${{ secrets.SIGN_KEY_ALIAS }}
          SIGN_KEY_PASSWORD: ${{ secrets.SIGN_KEY_PASSWORD }}
          SIGN_KEYSTORE_PASSWORD: ${{ secrets.SIGN_KEYSTORE_PASSWORD }}
          SIGN_KEYSTORE_DATA: ${{ secrets.SIGN_KEYSTORE_DATA }}
        if: ${{ env.SIGN_KEY_ALIAS != '' }}
        # language=bash
        run: |-
          echo "SIGN_KEY_ALIAS=$SIGN_KEY_ALIAS" >> "$GITHUB_ENV"
          echo "SIGN_KEY_PASSWORD=$SIGN_KEY_PASSWORD" >> "$GITHUB_ENV"
          echo "SIGN_KEYSTORE_PASSWORD=$SIGN_KEYSTORE_PASSWORD" >> "$GITHUB_ENV"
          echo "SIGN_KEYSTORE_DATA=$SIGN_KEYSTORE_DATA" >> "$GITHUB_ENV"

      - name: Set Gradle Publish Info
        env:
          GRADLE_PUBLISH_KEY: ${{ secrets.GRADLE_PUBLISH_KEY }}
          GRADLE_PUBLISH_SECRET: ${{ secrets.GRADLE_PUBLISH_SECRET }}
        if: ${{ env.GRADLE_PUBLISH_KEY != '' }}
        # language=bash
        run: |-
          echo "GRADLE_PUBLISH_KEY=$GRADLE_PUBLISH_KEY" >> "$GITHUB_ENV"
          echo "GRADLE_PUBLISH_SECRET=$GRADLE_PUBLISH_SECRET" >> "$GITHUB_ENV"

      - name: Gradle ${{ inputs.gradle_tasks }}
        # language=bash
        run: |-
          ${{ inputs.gradle_setup }}
          ./gradlew ${{ inputs.gradle_tasks }}

  notify-discord-end:
    name: Notify Discord (end)
    needs: [ 'git-version', 'gradle' ]
    if: ${{ always() }}
    uses: MinecraftForge/SharedActions/.github/workflows/discord-build-notifier.yml@v0
    with:
      project_path: ${{ inputs.project_path }}
      build_status: ${{ needs.gradle.result }}
      build_number: ${{ needs.git-version.outputs.build_number }}
      author_icon_url: ${{ inputs.author_icon_url }}
    secrets:
      DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}

  promote-artifacts:
    name: Promote artifact${{ contains( inputs.artifact_name, ',' ) == 'true' && 's' || '' }}
    needs: [ 'git-version', 'gradle' ]
    if: ${{ needs.gradle.result == 'success' && inputs.artifact_name != '' }}
    uses: MinecraftForge/SharedActions/.github/workflows/promote-artifacts.yml@v0
    with:
      group: ${{ inputs.artifact_group }}
      artifact: ${{ inputs.artifact_name }}
      version: ${{ needs.git-version.outputs.build_number }}
      type: ${{ inputs.promotion_type }}
    secrets:
      PROMOTE_ARTIFACT_WEBHOOK: ${{ secrets.PROMOTE_ARTIFACT_WEBHOOK }}
      PROMOTE_ARTIFACT_USERNAME: ${{ secrets.PROMOTE_ARTIFACT_USERNAME }}
      PROMOTE_ARTIFACT_PASSWORD: ${{ secrets.PROMOTE_ARTIFACT_PASSWORD }}
